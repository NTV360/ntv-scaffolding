name: 🚀 CI

on:
  push:
    branches:
      - main
      - development
      - staging
  pull_request:
    branches:
      - main
      - development

permissions:
  actions: read
  contents: read

env:
  # 🧠 Performance optimizations
  NODE_OPTIONS: --max_old_space_size=4096
  # 💾 Cache optimizations
  HUSKY: 0

jobs:
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 📦 Enhanced npm cache
      - name: 💾 Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps --prefer-offline --no-audit

      - name: 🔍 Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4

      # ☁️ BEST PRACTICE: Single Nx Cloud run for all tasks including E2E
      # This is the recommended approach from Nx team for maximum efficiency
      - name: ☁️ Start Nx Cloud CI run
        run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e"

      # ⚡ Run all tasks in optimal order: lint -> test -> build -> e2e
      - name: ⚡ Run lint and test
        run: npx nx affected -t lint test --parallel=3

      - name: 🏗️ Run build
        run: npx nx affected -t build --parallel=3
      
      - name: 📁 Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 1

      # 🎭 Install Playwright browsers before E2E (only if needed)
      - name: 🔍 Get Playwright version
        id: playwright-version
        run: echo "version=$(npm list @playwright/test --depth=0 --json | jq -r '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT

      - name: 🎭 Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-chromium
          restore-keys: |
            playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-
            playwright-${{ runner.os }}-

      - name: 🎭 Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      # 🧪 Run E2E tests as part of the same Nx Cloud run
      - name: 🧪 Run E2E tests
        run: npx nx affected -t e2e --parallel=1
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright

      # 📁 Enhanced artifact upload with CORRECT paths
      - name: 📁 Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results-${{ github.run_id }}
          path: |
            dist/.playwright/apps/ntv-host-installation/host-installation-e2e/test-results/
            dist/.playwright/apps/ntv-host-installation/host-installation-e2e/playwright-report/
          retention-days: 7
          compression-level: 6
