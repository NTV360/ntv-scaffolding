name: CI

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Node.js with caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Cache node_modules for faster installs
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Setup Nx Cloud for distributed caching
      - name: Setup Nx Cloud
        uses: nrwl/nx-set-shas@v4

      # Cache Nx build outputs
      - name: Cache Nx
        uses: actions/cache@v3
        with:
          path: |
            .nx/cache
            node_modules/.cache/nx
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.ts', '**/*.js', '**/*.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nx-

      # Lint affected projects
      - name: Lint
        run: npx nx affected --target=lint --parallel=3

      # Test affected projects
      - name: Test
        run: npx nx affected --target=test --parallel=3 --configuration=ci --coverage

      # Build affected projects
      - name: Build Host Installation
        run: npx nx affected --target=build --parallel=3

      # Build Component Pantry Library
      - name: Build Component Pantry
        run: npx nx build component-pantry

      # Build Storybook
      - name: Build Storybook
        run: npx nx affected --target=build-storybook --parallel=3

      # Run E2E tests
      - name: E2E Tests
        run: npx nx affected --target=e2e --parallel=1

      # Upload coverage reports (optional)
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage

  # Separate job for dependency updates to maximize cache hits
  dependency-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Check for dependency vulnerabilities
        run: npm audit --audit-level=high
